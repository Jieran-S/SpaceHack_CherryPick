---
title: "spatial_pipeline"
format:
  html:
    toc: true
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

## Load packages, read files in, function to look for markers

```{r}
suppressPackageStartupMessages({
  library(SpatialExperiment)
  library(ggplot2)
  library(scuttle)
  library(scran)
  library(dplyr)
  library(limma)
  library(ggspavis)
  library(cowplot)
  library(gridExtra)
  library(ggrepel)
})


calc_entropy <- function(u) {
  p <- u[u>0]
  p <- p/sum(p)
  -sum(p*log(p))
}

# https://stackoverflow.com/questions/9563711/r-color-palettes-for-many-data-classes/41230685#41230685
pal <- c(
  "dodgerblue2", "#E31A1C", # red
  "green4",
  "#6A3D9A", # purple
  "#FF7F00", # orange
  "black", "gold1",
  "skyblue2", "#FB9A99", # lt pink
  "palegreen2",
  "#CAB2D6", # lt purple
  "#FDBF6F", # lt orange
  "gray70", "khaki2",
  "maroon", "orchid1", "deeppink1", "blue1", "steelblue4",
  "darkturquoise", "green1", "yellow4", "yellow3",
  "darkorange4", "brown"
)


# pal <- c("#000000","#004949","#009292","#ff6db6","#ffb6db",
#  "#490092","#006ddb","#b66dff","#6db6ff","#b6dbff",
#  "#920000","#924900","#db6d00","#24ff24","#ffff6d")


run_viz <- function(datadir, topn = 12, return_mylist = FALSE) {
  spe <- readRDS(file.path(datadir, "spe.rds"))
  df <- readRDS(file.path(datadir,"anno_df.rds"))

  locations <- intersect(rownames(colData(spe)),
                         df$rowname)
  
  spe <- spe[,match(locations, rownames(colData(spe)))]
  df <- df[match(locations, df$rowname),]
  
  stopifnot(all(rownames(colData(spe)) == df$rowname))
  
  # remove any zero sum features/locations
  spe <- spe[rowSums(counts(spe)>0)>3,]
  keep_cols <- colSums(counts(spe))>0 & 
    !is.na(df$label_orig) & 
    df$label_orig!=""
  spe <- spe[,keep_cols]
  df <- df[keep_cols,]

  df$label_orig <- as.character(df$label_orig)
  
  if(!is.null(rowData(spe)$var_names)) {
    rownames(spe) <- rowData(spe)$var_names
  }
  if(!is.null(rowData(spe)$row.names)) {
    rowData(spe)$gene_name <- rowData(spe)$row.names
    rowData(spe)$row.names <- NULL
  }
  
  if(is.null(rowData(spe)$gene_name)) {
    rowData(spe)$gene_name <- rownames(rowData(spe))
  } else {
    rownames(spe) <- rowData(spe)$gene_name
  }

  rd <- rowData(spe) %>% data.frame()

  if(max(counts(spe)) < 9) {
    logcounts(spe) <- counts(spe)
    counts(spe) <- exp(counts(spe))
  } else {
    spe <- logNormCounts(spe)
  }
  mgv <- modelGeneVar(spe)
  
  # arbitrary cutoff to pick some HVGs
  hvg <- mgv$bio > 0 & mgv$p.value < .05 & mgv$mean > .2
  table(hvg)
  
  ggplot(mgv %>% data.frame,
         aes(mean, bio, colour=hvg)) + geom_point()
  
  # quick-dirty limma analysis
  lcounts <- logcounts(spe)
  mm <- model.matrix(~label_orig, data = df)
  f <- lmFit(as.matrix(lcounts), mm)
  f <- eBayes(f)
  
  aac <- aggregateAcrossCells(spe, df$label_orig)
  
  # adjust the aggregated counts for the number of cells
  agg_counts <- counts(aac)
  for(i in 1:ncol(agg_counts))
    agg_counts[,i] <- agg_counts[,i]/sum(agg_counts[,i])*1e6
  
  rd$entropy <- ents <- apply(agg_counts, 1, calc_entropy)
  rd$Fstat <- f$F
  rd$mean <- mgv$mean
  rd$hvg <- hvg
  rd$which.max <- colnames(agg_counts)[apply(agg_counts, 
                                             1, which.max)]
  
  
  mylist <- rd %>% select(gene_name, entropy, 
                          Fstat, which.max) %>% 
    filter(entropy < median(rd$entropy),
           Fstat > 100) %>%
    arrange(desc(Fstat/entropy)) 
  #%>% head(topn)
  
  if(return_mylist)
    return(mylist)
  
  df$label_new <- df$label_orig
  
  tb <- table(df$label_new) %>% sort(decreasing=TRUE)
  lv <- head(names(tb), min(24,length(tb)))
  if(length(tb) > 24) {
      lv <- c(lv, paste0("other_", length(tb)-24))
      df$label_new[df$label_new %in% setdiff(names(tb),lv)] <- last(lv)
  }
  df$label_new <- factor(df$label_new, lv)
  print(table(df$label_new, useNA="ifany"))
  
  this_pal <- head(pal, length(lv)) %>% setNames(lv)
 
  plotlist <- list()
  plotlist[[1]] <- ggplot(df, aes(x = x, y = y, colour = label_new)) + 
          geom_point() +
          scale_colour_manual(values = this_pal) +
          ggtitle(gsub("spe/", "", datadir)) +
          theme_classic() +
          theme(legend.position="bottom")
  
  plotlist[[2]] <- ggplot(rd, aes(entropy, Fstat, 
                 colour = mean, shape = hvg)) +
    geom_point(size = 2) +
    geom_label_repel(data = rd %>% 
                       filter(gene_name %in% 
                                head(mylist, topn)$gene_name), 
                     mapping = aes(entropy, Fstat, label = gene_name)) +
    scale_y_log10()

  count <- 2
  for(g in head(mylist, topn)$gene_name) {
    count <- count + 1
    plotlist[[count]] <- plotMolecules(spe, molecule = g)
  }

  return(plotlist)
}



```


## Making a PDF for every dataset -- annotations + (derived) markers


```{r}

# datadir <- "spe/abc_atlas_wmb_thalamus/c57bl6j-638850_6400/"

dirs <- dir("spe")

for(i in 1:length(dirs)) {

  this_dir <- dirs[i]
  this_dirs <- dir(file.path("spe", this_dir), 
                   full.names = TRUE)
  cat("Working on ", this_dir, "\n")
  
  pdf(paste0(this_dir, ".pdf"), width = 14, height = 10)
  for(j in 1:length(this_dirs)) {
  #for(j in 1:min(2,length(this_dirs))) {
  # for(j in 1:min(8,length(this_dirs))) {
    cat("---> ", this_dirs[j], "\n")
    plotlist <- run_viz(this_dirs[j])
  
    toprow <- plot_grid(plotlist = plotlist[1:2], nrow = 1)
    botrow <- plot_grid(plotlist = plotlist[-c(1:2)], nrow = 3)

    p <- plot_grid(toprow, botrow, nrow = 2, rel_heights = c(1.3,1))
    print(p)
  }
  dev.off()

  
}

```


## Which datasets have annotation confidences?


```{r}

# datadir <- "spe/abc_atlas_wmb_thalamus/c57bl6j-638850_6400/"

pdf("marker-genes-label-confidence.pdf", width=12, height=8)
dirs <- here::here(dir("misc/datasets_viz/spe", full.names = TRUE))

for(i in 1:length(dirs)) {

this_dir <- dirs[i]
this_dirs <- dir(this_dir, full.names = TRUE)
cat("Working on ", this_dir, "\n")
  
this_df <- data.frame()
  
for(j in 1:min(12,length(this_dirs))) {
# for(j in 1:length(this_dirs)) {
  cat("---> ", this_dirs[j], "\n")
    
  my_list <- run_viz(this_dirs[j], return_mylist = TRUE)
  df <- readRDS(file.path(this_dirs[j],"anno_df.rds"))
  
  if(is.null(df$label_confidence)) { df$label_confidence <- FALSE }
  df$label_orig <- as.character(df$label_orig)
  
  anno_features <- df %>% filter(!is.na(label_orig)) %>%
    select(label_orig, label_confidence) %>%
    group_by(label_orig) %>% 
    summarize(size = n(), 
              conf = sum(label_confidence)) %>%
    mutate(confidence = conf>0) %>% 
    select(-conf) %>%
    left_join(my_list %>% 
                group_by(which.max) %>% 
                tally, by = c("label_orig"="which.max")) %>%
    mutate(n = ifelse(is.na(n), 0, n))
  
  anno_features$sample <- basename(this_dirs[j])
  
  this_df <- bind_rows(this_df, anno_features)
    
}


pos <- position_jitter(width = 0, height = .1, seed = 2)

print(ggplot(this_df,
       aes(x=size, y=n, label=label_orig, 
                 colour=confidence)) +
  geom_jitter(position = pos) +
  geom_label_repel(position = pos) +
  scale_x_sqrt() + facet_wrap(~sample, scales = "free_y") +
  ylab("Number of marker genes (highest in this domain)") +
  xlab("Domain size"))

}
dev.off()



```

